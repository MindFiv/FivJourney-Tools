[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fivjourney-tools"
version = "1.0.0"
description = "FivJourney Tools - 为用户提供旅游行前、行中、行后的全过程追踪和帮助"
authors = [
    {name = "Charlie ZHANG", email = "sunnypig2002@gmail.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
keywords = ["travel", "tracking", "fastapi", "tourism", "fivjourney", "tools"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn>=0.24.0",
    "sqlalchemy>=2.0.36",
    "greenlet>=3.0.0",
    "alembic>=1.12.1",
    "psycopg[binary,pool]>=3.2.0", # PostgreSQL adapter
    "asyncpg>=0.29.0", # Async PostgreSQL driver
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-decouple>=3.8",
    "pydantic>=2.10.0",
    "pydantic-settings>=2.8.0",
    "httpx>=0.25.2",
    "aiofiles>=23.2.1",
    "Pillow>=10.2.0",
    "geopy>=2.4.0",
    "requests>=2.31.0",
    "aiosqlite>=0.19.0",
    "email-validator>=2.2.0",
    "fastapi-mcp>=0.3.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "httpx>=0.25.0",  # for testing
    # 额外的代码质量工具
    "bandit>=1.7.5",     # 安全检查
    "autoflake>=2.2.0",  # 删除未使用的导入
    "pyupgrade>=3.10.0", # 升级Python语法
    "safety>=2.3.0",     # 依赖安全检查
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
]
lint = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "bandit>=1.7.5",
    "autoflake>=2.2.0",
    "pyupgrade>=3.10.0",
    "safety>=2.3.0",
]

[project.urls]
Homepage = "https://github.com/5C-Plus/fivc-journey"
Documentation = "https://github.com/5C-Plus/fivc-journey#readme"
Repository = "https://github.com/5C-Plus/fivc-journey.git"
Issues = "https://github.com/5C-Plus/fivc-journey/issues"

[project.scripts]
fivjourney-tools = "main:app"

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.hatch.build.targets.wheel]
packages = ["apps"]

[tool.hatch.build]
include = [
    "apps/*",
    "main.py",
    "config.env",
    "requirements.txt",
]
exclude = [
    "*.pyc",
    "__pycache__/",
    "*.pyo",
    "*.pyd",
    ".Python",
    "build/",
    "develop-eggs/",
    "dist/",
    "downloads/",
    "eggs/",
    ".eggs/",
    "lib/",
    "lib64/",
    "parts/",
    "sdist/",
    "var/",
    "*.egg-info/",
    ".installed.cfg",
    "*.egg",
] 
