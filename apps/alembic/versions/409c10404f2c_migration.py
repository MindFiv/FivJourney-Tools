"""Migration

Revision ID: 409c10404f2c
Revises: b617051fe136
Create Date: 2025-07-08 23:48:26.339870

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '409c10404f2c'
down_revision: Union[str, None] = 'b617051fe136'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('expenses', 'id',
               existing_type=sa.NUMERIC(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=False)
    op.alter_column('expenses', 'user_id',
               existing_type=sa.NUMERIC(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=False)
    op.alter_column('expenses', 'travel_plan_id',
               existing_type=sa.NUMERIC(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=True)
    op.alter_column('itineraries', 'id',
               existing_type=sa.NUMERIC(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=False)
    op.alter_column('itineraries', 'travel_plan_id',
               existing_type=sa.NUMERIC(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=False)
    op.alter_column('travel_logs', 'id',
               existing_type=sa.NUMERIC(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=False)
    op.alter_column('travel_logs', 'author_id',
               existing_type=sa.NUMERIC(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=False)
    op.alter_column('travel_logs', 'travel_plan_id',
               existing_type=sa.NUMERIC(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=True)
    op.alter_column('travel_plans', 'id',
               existing_type=sa.NUMERIC(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=False)
    op.alter_column('travel_plans', 'owner_id',
               existing_type=sa.NUMERIC(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=False)
    op.alter_column('users', 'id',
               existing_type=sa.NUMERIC(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('travel_plans', 'owner_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('travel_plans', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('travel_logs', 'travel_plan_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('travel_logs', 'author_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('travel_logs', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('itineraries', 'travel_plan_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('itineraries', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('expenses', 'travel_plan_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('expenses', 'user_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('expenses', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    # ### end Alembic commands ###
